name: Tests
run-name: Tests
on: [push]
jobs:
  Tests:
    runs-on: self-hosted
    steps:
      - run: echo "Job is running on a ${{ runner.os }} runner"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Fetch git submodules
        run: |
          git submodule update --init --recursive
          git submodule foreach git checkout
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Restore cached tests build files
        id: tests-build-files-restore
        uses: actions/cache/restore@v4
        with:
          path: build
          key: tests-build
      - name: Files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Build CMake project
        run: |
          cmake -B build -S . -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build build -j $(nproc --all)
      - name: Run tests
        run: |
          cd build
          ctest --verbose -C Debug
      - name: Save tests build files
        id: tests-build-files-save
        uses: actions/cache/save@v4
        with:
          path: |
            build
          key: tests-build-${{ hashFiles('build') }}

  Coverage:
    runs-on: self-hosted
    steps:
      - run: echo "Job is running on a ${{ runner.os }} runner"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Fetch git submodules
        run: |
          git submodule update --init --recursive
          git submodule foreach git checkout
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Restore cached tests build files
        id: tests-build-files-restore
        uses: actions/cache/restore@v4
        with:
          path: build
          key: tests-build
      - name: Files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Build CMake project
        run: |
          cmake -S . -B build -DBUILD_TESTING=ON -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build build -j $(nproc --all)
      - name: Run coverage
        run: |
          cd build
          make -j $(nproc --all) Pixelizer-Tests-Coverage
          cd ..
          gcovr -r . -f Source/ -e Tests/ -e ThirdParty/ --exclude-throw-branches --exclude-unreachable-branches --gcov-ignore-errors no_working_dir_found --xml -o coverage.xml
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
      - name: Uploading coverage results
        uses: actions/upload-artifact@v4.3.3
        with:
          name: coverage-results
          path: coverage.html
      - name: Save tests build files
        id: tests-build-files-save
        uses: actions/cache/save@v4
        with:
          path: |
            build
          key: tests-build-${{ hashFiles('build') }}